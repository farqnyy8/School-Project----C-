//including the header file
#include "Person.h"

//initialising static variable
short Person::id_gen = 1000;

/*
Type -> No-arguments constructor;
Input -> none
Output -> none
Purpose -> to initialise variables
*/
Person::Person()
{
  name = address = phone = email = "empty.";
  //id_num is generated by adding one to the former id_gen. id_gen starts at 1000 by choice
  id_num = ++id_gen;
}

/*
Type -> Accessors;
Input -> none
Output -> name: string
Purpose -> to return the person's name
*/
string Person::get_name() const
{
  return name;
}

/*
Type -> Accessors;
Input -> none
Output -> id_num: short
Purpose -> to return the person's id number
*/
short Person::get_id() const
{
  return id_num;
}

/*
Type -> Accessors;
Input -> none
Output -> phone: string
Purpose -> to return the person's phone number
*/
string Person::get_phone() const
{
  return phone;
}

/*
Type -> Accessors;
Input -> none
Output -> email: string
Purpose -> to return the person's email
*/
string Person::get_email() const
{
  return email;
}

/*
Type -> Mutators;
Input -> name: string&
Output -> none
Purpose -> to change the person's name
*/
void Person::set_name(string& nName)
{
  name = nName;
}

/*
Type -> Mutators;
Input -> nPhone: string&
Output -> none
Purpose -> to change the person's phone number
*/
void Person::set_phone(string& nPhone)
{
  phone = nPhone;
}

/*
Type -> Mutators;
Input ->  nEmail: string&
Output -> none
Purpose -> to change the person's email
*/
void Person::set_email(string& nEmail)
{
  email = nEmail;
}

/*
Type -> Mutators;
Input -> none
Output -> none
Purpose -> to change the person's details
*/
void Person::enter()
{
  cin.ignore();
  cout << "Enter Name: ";
  getline(cin, name);

  cout << "Enter Address: ";
  getline(cin, address);

  cout << "Enter Phone: ";
  cin >> phone;

  cout << "Enter Email: ";
  cin >> email;
  cin.ignore();
}


/*
Type -> Mutators;
Input -> none
Output -> none
Purpose -> to ouput the person's details
*/
void Person::print()
{
  cout << "Name: " << name << endl;
  cout << "ID Number: " << id_num << endl;
  cout << "Address: " << address << endl;
  cout << "Phone: " << phone << endl;
  cout << "Email: " << email << endl;
}


/*
Type -> Special Mutator;
Input -> type: vector<string>&, name: string&
Output -> none
Purpose -> to add the string to the vector
*/
void Person::add_course(vector<string>& type, string& name)
{
  type.push_back(name);
}


/*
Type -> Special Mutator;
Input -> vector<string>&, name: string&
Output -> none
Purpose -> to erase the string from the vector
*/
void Person::remove_course(vector<string>& type, string& name)
{
  for(int i = 0; i < type.size(); i++)
  {
    if(type[i] == name)
      type.erase( type.begin() + i);
  }
}
